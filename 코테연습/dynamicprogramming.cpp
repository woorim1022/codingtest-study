//다이나믹 프로그래밍 
//하나의 문제를 단 한 번만 풀도록 하는 알고리즘
//다이나믹 프로그래밍은 다음의 가정 하에 사용할 수 있다
//가정 1) 큰 문제를 작은 문제로 나눌 수 있다
//가정 2) 작은 문제에서 구한 정답은 그것을 포함하는 큰 문제에서도 동일하다 
//이미 계산한 결과는 메모이제이션을 사용해 배열에 저장함으로써 나중에 동일한 계산을
//해야 할 때는 저장된 값을 단순히 반환 

#include <stdio.h>

//시간복잡도 O(2^n) 
int dp(int x){   //숫자가 커지면 연산 횟수가 두배씩 증가해서 2^n번 연산하게 된다 
				 //개선할 필요가 있음 
	if(x == 1) return 1;  //재귀함수가 종료되는임 조건 
	if(x == 2) return 1;  //재귀함수가 종료되는 조건 
	return dp(x - 1) + dp(x - 2);
}
int main(void){
	printf("%d ", dp(50));  //50 이면 2^50 번이나 연산을 해야하므로 비효율적 
} 
